TYPE int 1 1
ID a 1 5
ASSIGN = 1 7
INT 24 1 9
SEPARATOR ; 1 11
TYPE int 2 1
ID binA 2 5
ASSIGN = 2 10
INT 0b11000 2 12
SEPARATOR ; 2 19
TYPE int 3 1
ID octA 3 5
ASSIGN = 3 10
INT 0o30 3 12
SEPARATOR ; 3 16
TYPE int 4 1
ID hexA 4 5
ASSIGN = 4 10
INT h 4 12
ID h18 4 13
SEPARATOR ; 4 16
TYPE float 5 1
ID b 5 7
ASSIGN = 5 9
FLOAT 24.00 5 11
SEPARATOR ; 5 16
TYPE string 6 1
ID c 6 8
ASSIGN = 6 10
STRING 'Test!' 6 12
SEPARATOR ; 6 19
IF_OP if 8 1
BRACKET ( 8 4
ID binA 8 5
LESS < 8 10
ID octA 8 12
BRACKET ) 8 16
CURLY_BRACES { 9 1
ID c 10 5
ASSIGN = 10 7
STRING '1' 10 9
SEPARATOR ; 10 12
CURLY_BRACES } 11 1
LOOP_OP while 13 1
BRACKET ( 13 7
ID binA 13 8
EQUALITY == 13 13
ID octB 13 16
BRACKET ) 13 20
CURLY_BRACES { 14 1
ID c 15 5
ASSIGN = 15 7
STRING 'String literal' 15 9
SEPARATOR ; 15 25
CURLY_BRACES } 16 1
IO_OP write 18 1
BRACKET ( 18 6
STRING 'NO!' 18 7
BRACKET ) 18 12
SEPARATOR ; 18 13
IO_OP read 19 1
BRACKET ( 19 5
ID c 19 6
BRACKET ) 19 7
SEPARATOR ; 19 8
ID octA 21 1
ARITH_OP + 21 6
ID binA 21 8
SEPARATOR ; 21 12
ID octA 22 1
ARITH_OP - 22 6
ID binA 22 8
SEPARATOR ; 22 12
ID octA 23 1
ARITH_OP * 23 6
ID binA 23 8
SEPARATOR ; 23 12
ID octA 24 1
ARITH_OP / 24 6
ID binA 24 8
SEPARATOR ; 24 12
ID octA 26 1
SEPARATOR , 26 5
ID binA 26 7
SEPARATOR , 26 11
ID decA 26 13
SEPARATOR ; 26 17
END_OF_FILE  27 1
